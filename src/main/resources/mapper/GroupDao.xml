<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.gsdp.dao.GroupDao">
    
    <sql id="columns">
    	group_id,group_icon,group_name,group_dec,group_contact,group_address,group_type,owner,visitors,group_members,group_status,group_evidence
    </sql>
    
    <insert id="addAdmin">
    	insert ignore admin values(#{userId},#{groupId});
    </insert>
    
    
    <delete id="deleteAdmin">
    	delete from admin
    	<where>
    		user_id = #{userId} and group_id = #{groupId};
    	</where>
    </delete>


	<select id="getGroupAdmin" resultType="int">
		select user_id from admin
		<where>
			group_id = #{groupId};
		</where>
	</select>
    
    
    <update id="changeOwner">
    	update `group`
    	<set>
    		owner = #{userId}
    	</set>
    	<where>
    		group_id = #{groupId};
    	</where>
    </update>
    
    
    <insert id="addMember">
    	insert ignore member(user_id,group_id,apply_reason,phone)
    	values(#{userId},#{groupId},#{applyReason},#{phone});
    </insert>

	<update id="changeMemberNumber">
		UPDATE  `group`
		<set>
            group_members = group_members + #{number}
		</set>
		<where>
			group_id = #{groupId};
		</where>
	</update>
    
    
    <delete id="deleteMember">
    	delete from member
    	<where>
    		user_id = #{userId} and group_id = #{groupId};
    	</where>
    </delete>
    
    
    <insert id="addGroup" keyProperty="groupId">
    	insert ignore `group`(group_icon,group_name,group_dec,group_contact,group_address,group_type,owner,visitors,group_status,group_evidence)
    	values(#{groupIcon},#{groupName},#{groupDec},#{groupContact},#{groupAddress},#{groupType},#{owner},#{visitors},#{groupStatus},#{groupEvidence});
    </insert>
    

    <update id="updateGroup">
    	update `group`
    	<set>
    		<if test="groupIcon != null and !groupIcon.equals('')">
    			group_icon = #{groupIcon},
    		</if>
    			group_type = #{groupType},
    		<if test="groupName != null and !groupName.equals('')">
    			group_name = #{groupName},
    		</if>
    		<if test="groupDec != null and !groupDec.equals('')">
    			group_dec = #{groupDec},
    		</if>
    		<if test="groupAddress != null and !groupAddress.equals('')">
    			group_address = #{groupAddress},
    		</if>
    		<if test="groupContact != null and !groupContact.equals('')">
    			group_contact = #{groupContact},
    		</if>
    			group_type = #{groupType},
    			owner = #{owner},
				visitors = #{visitors}
    	</set>
    	<where>
    		group_id = #{groupId};
    	</where>
    </update>
    
    <select id="getGroupMessage" resultType="Group">
    	select
    	<include refid="columns"/>
    	from `group`
    	<where>
    		group_id = #{groupId};
    	</where>
    </select>
    
    <!--简单来说#{} 解析的是占位符？可以防止SQL注入，
     比如打印出来的语句 select *　from table where id=?,
     然而${} 则是不能防止SQL注入,打印出来的语句
      select *　from table where id=2  实实在在的参数-->
    <select id="getGroupMessageByType" resultType="Group">
    	select
    	<include refid="columns"/>
    	from `group`
    	<where>
    		group_type = #{groupType}
    	</where>
		<if test="order != null and !order.equals('')">
            ORDER BY ${order} <if test="type">DESC</if>
		</if>
		<if test="limit != 0">
            limit #{offset},#{limited};
		</if>
    </select>
    
    
    <select id="getAllGroupMessage" resultType="Group">
    	select
    	<include refid="columns"/>
    	from `group`
		<if test="order != null and !order.equals('')">
			ORDER by ${order} <if test="type">DESC</if>
		</if>
		<if test="limit != 0">
			limit #{offset},#{limit};
		</if>

    </select>

	<delete id="deleteGroup">
		DELETE FROM `group`
		<where>
			group_id = #{groupId};
		</where>
	</delete>

	<select id="getGroupListMessageExpGroup" resultType="Group">
		SELECT
		<include refid="columns"/>
		FROM `group`
		<where>
			group_id != #{groupId};
		</where>
	</select>

	<!--注意我们在传入string类型参数的时候，我们在这里用参数名只能用_parameter
	来才能获取，但是如果是int类型就不用，但是为了语义表达清楚，这里我们用@param来
	解决这个问题,但是我们如果把if判断从where条件里面去掉的话，我们不用@Param这个
	注解也是可以执行的。-->
	<select id="isSameGroupName" resultType="int">
		select COUNT(*) from `group`
		<where>
			group_name = #{groupName};
		</where>
	</select>

</mapper>
